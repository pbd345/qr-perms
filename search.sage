# fuzzy permutation matrices
def genPermMatrix(p,n):
    k=len(p)
    if k==n:
        return matrix(n,n,lambda x,y:p[x]==y)
    return factorial(n-k)/binomial(n,k)*matrix(n,n,lambda x,y:sum([binomial(x,j)*binomial(n-1-x,k-1-j)*binomial(y,p[j])*binomial(n-1-y,k-1-p[j]) for j in range(k)]))
# check if a list of matrices has a constant cover
def covers(matlist):
    n=len(matlist[0].list())
    M=matrix([A.list() for A in matlist]).transpose()
    try:
        sol=M.solve_right(vector(n*[1]))
        return "covers with coefficients",sol
    except ValueError:
        return "does not cover"
# make nice coefficients
def standardize(c):
    g=gcd(c)
    return [x/g for x in c]
# dihedral equivalence
def D4perms(p):
    n=len(p)
    ans=[p]
    ans+=[[n-1-p[i] for i in range(n)]]
    ans+=[[p[n-1-i] for i in range(n)]]
    ans+=[[n-1-p[n-1-i] for i in range(n)]]
    q=[0]*n
    for i in range(n):
        q[p[i]]=i
    ans+=[q]
    ans+=[[n-1-q[i] for i in range(n)]]
    ans+=[[q[n-1-i] for i in range(n)]]
    ans+=[[n-1-q[n-1-i] for i in range(n)]]
    return ans
def equivCombsOfPerms(comb1,comb2):
    if len(comb1)!=len(comb2):
        return False
    for j in range(8):
        if sorted([(D4perms(c[0])[j],c[1]) for c in comb1])==sorted([(c[0],c[1]) for c in comb2]):
            return True
    return False
Hessians={}
Hessians[(0,1,2,3)] = matrix(QQ,[[2368,208,-432,-432,208,4441,0,0,-432,0,576,576,-432,0,576,576], [208,1888,88,-432,-4195,128,3563,0,216,-432,-72,576,216,-432,-72,576], [-432,88,1408,-32,216,-3357,48,2601,0,288,-432,0,0,288,-432,0], [-432,-432,-32,928,216,216,-2435,-32,0,0,216,-432,0,0,216,-432], [208,-4195,216,216,1888,128,-432,-432,88,3563,-72,-72,-432,0,576,576], [4441,128,-3357,216,128,1728,88,-432,-3357,88,3713,-72,216,-432,-72,576], [0,3563,48,-2435,-432,88,1568,48,288,-3507,88,3563,0,288,-432,0], [0,0,2601,-32,-432,-432,48,1408,288,288,-3357,88,0,0,216,-432], [-432,216,0,0,88,-3357,288,288,1408,48,-432,-432,-32,2601,0,0], [0,-432,288,0,3563,88,-3507,288,48,1568,88,-432,-2435,48,3563,0], [576,-72,-432,216,-72,3713,88,-3357,-432,88,1728,128,216,-3357,128,4441], [576,576,0,-432,-72,-72,3563,88,-432,-432,128,1888,216,216,-4195,208], [-432,216,0,0,-432,216,0,0,-32,-2435,216,216,928,-32,-432,-432], [0,-432,288,0,0,-432,288,0,2601,48,-3357,216,-32,1408,88,-432], [576,-72,-432,216,576,-72,-432,216,0,3563,128,-4195,-432,88,1888,208], [576,576,0,-432,576,576,0,-432,0,0,4441,208,-432,-432,208,2368]])
Hessians[(0,1,3,2)] = matrix(QQ,[[1056,536,432,432,536,3121,0,0,432,0,-576,-576,432,0,-576,-576], [536,640,432,432,-3039,440,1663,0,-216,432,72,-576,-216,432,72,-576], [432,432,224,328,-216,-1629,344,433,0,-288,432,0,0,-288,432,0], [432,432,328,-192,-216,-216,-447,248,0,0,-216,432,0,0,-216,432], [536,-3039,-216,-216,640,440,432,432,432,1663,72,72,432,0,-576,-576], [3121,440,-1629,-216,440,288,352,432,-1629,352,569,72,-216,432,72,-576], [0,1663,344,-447,432,352,-64,264,-288,-575,272,-657,0,-288,432,0], [0,0,433,248,432,432,264,-416,-288,-288,611,192,0,0,-216,432], [432,-216,0,0,432,-1629,-288,-288,224,344,432,432,328,433,0,0], [0,432,-288,0,1663,352,-575,-288,344,-64,272,432,-447,264,-657,0], [-576,72,432,-216,72,569,272,611,432,272,-352,200,-216,611,200,-2239], [-576,-576,0,432,72,72,-657,192,432,432,200,-640,-216,-216,2161,136], [432,-216,0,0,432,-216,0,0,328,-447,-216,-216,-192,248,432,432], [0,432,-288,0,0,432,-288,0,433,264,611,-216,248,-416,192,432], [-576,72,432,-216,-576,72,432,-216,0,-657,200,2161,432,192,-640,136], [-576,-576,0,432,-576,-576,0,432,0,0,-2239,136,432,432,136,-864]])
Hessians[(0,2,1,3)] = matrix(QQ,[[-1232,-152,144,144,-152,-194,1044,1044,144,1044,144,144,144,1044,144,144], [-152,-848,-56,144,350,-88,-550,1044,-756,144,1044,144,-756,144,1044,144], [144,-56,-464,40,-756,738,-24,-162,144,-756,144,1044,144,-756,144,1044], [144,144,40,-80,-756,-756,382,40,144,144,-756,144,144,144,-756,144], [-152,350,-756,-756,-848,-88,144,144,-56,-550,1044,1044,144,1044,144,144], [-194,-88,738,-756,-88,-720,-56,144,738,-56,-994,1044,-756,144,1044,144], [1044,-550,-24,382,144,-56,-592,-24,-756,1182,-56,-550,144,-756,144,1044], [1044,1044,-162,40,144,144,-24,-464,-756,-756,738,-56,144,144,-756,144], [144,-756,144,144,-56,738,-756,-756,-464,-24,144,144,40,-162,1044,1044], [1044,144,-756,144,-550,-56,1182,-756,-24,-592,-56,144,382,-24,-550,1044], [144,1044,144,-756,1044,-994,-56,738,144,-56,-720,-88,-756,738,-88,-194], [144,144,1044,144,1044,1044,-550,-56,144,144,-88,-848,-756,-756,350,-152], [144,-756,144,144,144,-756,144,144,40,382,-756,-756,-80,40,144,144], [1044,144,-756,144,1044,144,-756,144,-162,-24,738,-756,40,-464,-56,144], [144,1044,144,-756,144,1044,144,-756,1044,-550,-88,350,144,-56,-848,-152], [144,144,1044,144,144,144,1044,144,1044,1044,-194,-152,144,144,-152,-1232]])
Hessians[(0,2,3,1)] = matrix(QQ,[[-672,308,576,576,-292,-98,396,396,-144,-1044,-144,-144,-144,-1044,-144,-144], [308,-320,396,576,24,-220,664,396,756,-144,-1044,-144,756,-144,-1044,-144], [576,396,32,484,-324,-702,-148,1798,-144,756,-144,-1044,-144,756,-144,-1044], [576,576,484,384,-324,-324,-1800,-76,-144,-144,756,-144,-144,-144,756,-144], [-292,24,-324,-324,-800,260,576,576,-324,-356,36,36,-144,-1044,-144,-144], [-98,-220,-702,-324,260,-576,316,576,258,-284,542,36,756,-144,-1044,-144], [396,664,-148,-1800,576,316,-352,372,36,-620,-244,1884,-144,756,-144,-1044], [396,396,1798,-76,576,576,372,-128,36,36,-1942,-204,-144,-144,756,-144], [-144,756,-144,-144,-324,258,36,36,-928,212,576,576,-356,-782,-324,-324], [-1044,-144,756,-144,-356,-284,-620,36,212,-832,236,576,660,-348,-36,-324], [-144,-1044,-144,756,36,542,-244,-1942,576,236,-736,260,396,-82,-340,1082], [-144,-144,-1044,-144,36,36,1884,-204,576,576,260,-640,396,396,-1196,-332], [-144,756,-144,-144,-144,756,-144,-144,-356,660,396,396,-1056,164,576,576], [-1044,-144,756,-144,-1044,-144,756,-144,-782,-348,-82,396,164,-1088,156,576], [-144,-1044,-144,756,-144,-1044,-144,756,-324,-36,-340,-1196,576,156,-1120,148], [-144,-144,-1044,-144,-144,-144,-1044,-144,-324,-324,1082,-332,576,576,148,-1152]])
Hessians[(0,3,1,2)] = matrix(QQ,[[-672,-292,-144,-144,308,-98,-1044,-1044,576,396,-144,-144,576,396,-144,-144], [-292,-800,-324,-144,24,260,-356,-1044,-324,576,36,-144,-324,576,36,-144], [-144,-324,-928,-356,756,258,212,-782,-144,36,576,-324,-144,36,576,-324], [-144,-144,-356,-1056,756,756,660,164,-144,-144,396,576,-144,-144,396,576], [308,24,756,756,-320,-220,-144,-144,396,664,-1044,-1044,576,396,-144,-144], [-98,260,258,756,-220,-576,-284,-144,-702,316,542,-1044,-324,576,36,-144], [-1044,-356,212,660,-144,-284,-832,-348,756,-620,236,-36,-144,36,576,-324], [-1044,-1044,-782,164,-144,-144,-348,-1088,756,756,-82,156,-144,-144,396,576], [576,-324,-144,-144,396,-702,756,756,32,-148,-144,-144,484,1798,-1044,-1044], [396,576,36,-144,664,316,-620,756,-148,-352,-244,-144,-1800,372,1884,-1044], [-144,36,576,396,-1044,542,236,-82,-144,-244,-736,-340,756,-1942,260,1082], [-144,-144,-324,576,-1044,-1044,-36,156,-144,-144,-340,-1120,756,756,-1196,148], [576,-324,-144,-144,576,-324,-144,-144,484,-1800,756,756,384,-76,-144,-144], [396,576,36,-144,396,576,36,-144,1798,372,-1942,756,-76,-128,-204,-144], [-144,36,576,396,-144,36,576,396,-1044,1884,260,-1196,-144,-204,-640,-332], [-144,-144,-324,576,-144,-144,-324,576,-1044,-1044,1082,148,-144,-144,-332,-1152]])
Hessians[(0,3,2,1)] = matrix(QQ,[[1200,-160,-576,-576,-160,-1598,-396,-396,-576,-396,144,144,-576,-396,144,144], [-160,976,-216,-576,1458,-184,-2102,-396,324,-576,-36,144,324,-576,-36,144], [-576,-216,752,-272,324,1950,-208,-2810,144,-36,-576,324,144,-36,-576,324], [-576,-576,-272,528,324,324,2646,-232,144,144,-396,-576,144,144,-396,-576], [-160,1458,324,324,976,-184,-576,-576,-216,-2102,-36,-36,-576,-396,144,144], [-1598,-184,1950,324,-184,1008,-176,-576,1950,-176,-2878,-36,324,-576,-36,144], [-396,-2102,-208,2646,-576,-176,1040,-168,-36,2746,-136,-3642,144,-36,-576,324], [-396,-396,-2810,-232,-576,-576,-168,1072,-36,-36,3530,-96,144,144,-396,-576], [-576,324,144,144,-216,1950,-36,-36,752,-208,-576,-576,-272,-2810,324,324], [-396,-576,-36,144,-2102,-176,2746,-36,-208,1040,-136,-576,2646,-168,-3642,324], [144,-36,-576,-396,-36,-2878,-136,3530,-576,-136,1328,-64,-396,3530,-64,-3958], [144,144,324,-576,-36,-36,-3642,-96,-576,-576,-64,1616,-396,-396,3898,40], [-576,324,144,144,-576,324,144,144,-272,2646,-396,-396,528,-232,-576,-576], [-396,-576,-36,144,-396,-576,-36,144,-2810,-168,3530,-396,-232,1072,-96,-576], [144,-36,-576,-396,144,-36,-576,-396,324,-3642,-64,3898,-576,-96,1616,40], [144,144,324,-576,144,144,324,-576,324,324,-3958,40,-576,-576,40,2160]])
Hessians[(1,0,2,3)] = matrix(QQ,[[-864,136,432,432,136,-2239,0,0,432,0,-576,-576,432,0,-576,-576], [136,-640,192,432,2161,200,-657,0,-216,432,72,-576,-216,432,72,-576], [432,192,-416,248,-216,611,264,433,0,-288,432,0,0,-288,432,0], [432,432,248,-192,-216,-216,-447,328,0,0,-216,432,0,0,-216,432], [136,2161,-216,-216,-640,200,432,432,192,-657,72,72,432,0,-576,-576], [-2239,200,611,-216,200,-352,272,432,611,272,569,72,-216,432,72,-576], [0,-657,264,-447,432,272,-64,344,-288,-575,352,1663,0,-288,432,0], [0,0,433,328,432,432,344,224,-288,-288,-1629,432,0,0,-216,432], [432,-216,0,0,192,611,-288,-288,-416,264,432,432,248,433,0,0], [0,432,-288,0,-657,272,-575,-288,264,-64,352,432,-447,344,1663,0], [-576,72,432,-216,72,569,352,-1629,432,352,288,440,-216,-1629,440,3121], [-576,-576,0,432,72,72,1663,432,432,432,440,640,-216,-216,-3039,536], [432,-216,0,0,432,-216,0,0,248,-447,-216,-216,-192,328,432,432], [0,432,-288,0,0,432,-288,0,433,344,-1629,-216,328,224,432,432], [-576,72,432,-216,-576,72,432,-216,0,1663,440,-3039,432,432,640,536], [-576,-576,0,432,-576,-576,0,432,0,0,3121,536,432,432,536,1056]])
Hessians[(1,0,3,2)] = matrix(QQ,[[416,-184,-432,-432,-184,-3235,0,0,-432,0,576,576,-432,0,576,576], [-184,704,-112,-432,3317,-136,-2125,0,216,-432,-72,576,216,-432,-72,576], [-432,-112,992,-40,216,2231,-88,-1411,0,288,-432,0,0,288,-432,0], [-432,-432,-40,1280,216,216,1541,-40,0,0,216,-432,0,0,216,-432], [-184,3317,216,216,704,-136,-432,-432,-112,-2125,-72,-72,-432,0,576,576], [-3235,-136,2231,216,-136,800,-112,-432,2231,-112,-1963,-72,216,-432,-72,576], [0,-2125,-88,1541,-432,-112,896,-88,288,2069,-112,-2125,0,288,-432,0], [0,0,-1411,-40,-432,-432,-88,992,288,288,2231,-112,0,0,216,-432], [-432,216,0,0,-112,2231,288,288,992,-88,-432,-432,-40,-1411,0,0], [0,-432,288,0,-2125,-112,2069,288,-88,896,-112,-432,1541,-88,-2125,0], [576,-72,-432,216,-72,-1963,-112,2231,-432,-112,800,-136,216,2231,-136,-3235], [576,576,0,-432,-72,-72,-2125,-112,-432,-432,-136,704,216,216,3317,-184], [-432,216,0,0,-432,216,0,0,-40,1541,216,216,1280,-40,-432,-432], [0,-432,288,0,0,-432,288,0,-1411,-88,2231,216,-40,992,-112,-432], [576,-72,-432,216,576,-72,-432,216,0,-2125,-136,3317,-432,-112,704,-184], [576,576,0,-432,576,576,0,-432,0,0,-3235,-184,-432,-432,-184,416]])
Hessians[(1,2,0,3)] = matrix(QQ,[[-1152,-332,-144,-144,148,1082,-1044,-1044,576,-324,-144,-144,576,-324,-144,-144], [-332,-640,-204,-144,-1196,260,1884,-1044,396,576,36,-144,396,576,36,-144], [-144,-204,-128,-76,756,-1942,372,1798,-144,36,576,396,-144,36,576,396], [-144,-144,-76,384,756,756,-1800,484,-144,-144,-324,576,-144,-144,-324,576], [148,-1196,756,756,-1120,-340,-144,-144,156,-36,-1044,-1044,576,-324,-144,-144], [1082,260,-1942,756,-340,-736,-244,-144,-82,236,542,-1044,396,576,36,-144], [-1044,1884,372,-1800,-144,-244,-352,-148,756,-620,316,664,-144,36,576,396], [-1044,-1044,1798,484,-144,-144,-148,32,756,756,-702,396,-144,-144,-324,576], [576,396,-144,-144,156,-82,756,756,-1088,-348,-144,-144,164,-782,-1044,-1044], [-324,576,36,-144,-36,236,-620,756,-348,-832,-284,-144,660,212,-356,-1044], [-144,36,576,-324,-1044,542,316,-702,-144,-284,-576,-220,756,258,260,-98], [-144,-144,396,576,-1044,-1044,664,396,-144,-144,-220,-320,756,756,24,308], [576,396,-144,-144,576,396,-144,-144,164,660,756,756,-1056,-356,-144,-144], [-324,576,36,-144,-324,576,36,-144,-782,212,258,756,-356,-928,-324,-144], [-144,36,576,-324,-144,36,576,-324,-1044,-356,260,24,-144,-324,-800,-292], [-144,-144,396,576,-144,-144,396,576,-1044,-1044,-98,308,-144,-144,-292,-672]])
Hessians[(1,2,3,0)] = matrix(QQ,[[528,-232,-576,-576,-272,2646,-396,-396,-576,324,144,144,-576,324,144,144], [-232,1072,-96,-576,-2810,-168,3530,-396,-396,-576,-36,144,-396,-576,-36,144], [-576,-96,1616,40,324,-3642,-64,3898,144,-36,-576,-396,144,-36,-576,-396], [-576,-576,40,2160,324,324,-3958,40,144,144,324,-576,144,144,324,-576], [-272,-2810,324,324,752,-208,-576,-576,-216,1950,-36,-36,-576,324,144,144], [2646,-168,-3642,324,-208,1040,-136,-576,-2102,-176,2746,-36,-396,-576,-36,144], [-396,3530,-64,-3958,-576,-136,1328,-64,-36,-2878,-136,3530,144,-36,-576,-396], [-396,-396,3898,40,-576,-576,-64,1616,-36,-36,-3642,-96,144,144,324,-576], [-576,-396,144,144,-216,-2102,-36,-36,976,-184,-576,-576,-160,1458,324,324], [324,-576,-36,144,1950,-176,-2878,-36,-184,1008,-176,-576,-1598,-184,1950,324], [144,-36,-576,324,-36,2746,-136,-3642,-576,-176,1040,-168,-396,-2102,-208,2646], [144,144,-396,-576,-36,-36,3530,-96,-576,-576,-168,1072,-396,-396,-2810,-232], [-576,-396,144,144,-576,-396,144,144,-160,-1598,-396,-396,1200,-160,-576,-576], [324,-576,-36,144,324,-576,-36,144,1458,-184,-2102,-396,-160,976,-216,-576], [144,-36,-576,324,144,-36,-576,324,324,1950,-208,-2810,-576,-216,752,-272], [144,144,-396,-576,144,144,-396,-576,324,324,2646,-232,-576,-576,-272,528]])
Hessians[(1,3,0,2)] = matrix(QQ,[[-1456,-256,144,144,-256,44,1044,1044,144,-756,144,144,144,-756,144,144], [-256,-1456,-256,144,44,-256,44,1044,1044,144,-756,144,1044,144,-756,144], [144,-256,-1456,-256,-756,44,-256,44,144,1044,144,-756,144,1044,144,-756], [144,144,-256,-1456,-756,-756,44,-256,144,144,1044,144,144,144,1044,144], [-256,44,-756,-756,-1456,-256,144,144,-256,44,1044,1044,144,-756,144,144], [44,-256,44,-756,-256,-1456,-256,144,44,-256,44,1044,1044,144,-756,144], [1044,44,-256,44,144,-256,-1456,-256,-756,44,-256,44,144,1044,144,-756], [1044,1044,44,-256,144,144,-256,-1456,-756,-756,44,-256,144,144,1044,144], [144,1044,144,144,-256,44,-756,-756,-1456,-256,144,144,-256,44,1044,1044], [-756,144,1044,144,44,-256,44,-756,-256,-1456,-256,144,44,-256,44,1044], [144,-756,144,1044,1044,44,-256,44,144,-256,-1456,-256,-756,44,-256,44], [144,144,-756,144,1044,1044,44,-256,144,144,-256,-1456,-756,-756,44,-256], [144,1044,144,144,144,1044,144,144,-256,44,-756,-756,-1456,-256,144,144], [-756,144,1044,144,-756,144,1044,144,44,-256,44,-756,-256,-1456,-256,144], [144,-756,144,1044,144,-756,144,1044,1044,44,-256,44,144,-256,-1456,-256], [144,144,-756,144,144,144,-756,144,1044,1044,44,-256,144,144,-256,-1456]])
Hessians[(1,3,2,0)] = matrix(QQ,[[-1056,164,576,576,-356,660,396,396,-144,756,-144,-144,-144,756,-144,-144], [164,-1088,156,576,-782,-348,-82,396,-1044,-144,756,-144,-1044,-144,756,-144], [576,156,-1120,148,-324,-36,-340,-1196,-144,-1044,-144,756,-144,-1044,-144,756], [576,576,148,-1152,-324,-324,1082,-332,-144,-144,-1044,-144,-144,-144,-1044,-144], [-356,-782,-324,-324,-928,212,576,576,-324,258,36,36,-144,756,-144,-144], [660,-348,-36,-324,212,-832,236,576,-356,-284,-620,36,-1044,-144,756,-144], [396,-82,-340,1082,576,236,-736,260,36,542,-244,-1942,-144,-1044,-144,756], [396,396,-1196,-332,576,576,260,-640,36,36,1884,-204,-144,-144,-1044,-144], [-144,-1044,-144,-144,-324,-356,36,36,-800,260,576,576,-292,24,-324,-324], [756,-144,-1044,-144,258,-284,542,36,260,-576,316,576,-98,-220,-702,-324], [-144,756,-144,-1044,36,-620,-244,1884,576,316,-352,372,396,664,-148,-1800], [-144,-144,756,-144,36,36,-1942,-204,576,576,372,-128,396,396,1798,-76], [-144,-1044,-144,-144,-144,-1044,-144,-144,-292,-98,396,396,-672,308,576,576], [756,-144,-1044,-144,756,-144,-1044,-144,24,-220,664,396,308,-320,396,576], [-144,756,-144,-1044,-144,756,-144,-1044,-324,-702,-148,1798,576,396,32,484], [-144,-144,756,-144,-144,-144,756,-144,-324,-324,-1800,-76,576,576,484,384]])
Hessians[(2,0,1,3)] = matrix(QQ,[[-1152,148,576,576,-332,1082,-324,-324,-144,-1044,-144,-144,-144,-1044,-144,-144], [148,-1120,156,576,-1196,-340,-36,-324,756,-144,-1044,-144,756,-144,-1044,-144], [576,156,-1088,164,396,-82,-348,-782,-144,756,-144,-1044,-144,756,-144,-1044], [576,576,164,-1056,396,396,660,-356,-144,-144,756,-144,-144,-144,756,-144], [-332,-1196,396,396,-640,260,576,576,-204,1884,36,36,-144,-1044,-144,-144], [1082,-340,-82,396,260,-736,236,576,-1942,-244,542,36,756,-144,-1044,-144], [-324,-36,-348,660,576,236,-832,212,36,-620,-284,-356,-144,756,-144,-1044], [-324,-324,-782,-356,576,576,212,-928,36,36,258,-324,-144,-144,756,-144], [-144,756,-144,-144,-204,-1942,36,36,-128,372,576,576,-76,1798,396,396], [-1044,-144,756,-144,1884,-244,-620,36,372,-352,316,576,-1800,-148,664,396], [-144,-1044,-144,756,36,542,-284,258,576,316,-576,260,-324,-702,-220,-98], [-144,-144,-1044,-144,36,36,-356,-324,576,576,260,-800,-324,-324,24,-292], [-144,756,-144,-144,-144,756,-144,-144,-76,-1800,-324,-324,384,484,576,576], [-1044,-144,756,-144,-1044,-144,756,-144,1798,-148,-702,-324,484,32,396,576], [-144,-1044,-144,756,-144,-1044,-144,756,396,664,-220,24,576,396,-320,308], [-144,-144,-1044,-144,-144,-144,-1044,-144,396,396,-98,-292,576,576,308,-672]])
Hessians[(2,0,3,1)] = matrix(QQ,[[-1456,-256,144,144,-256,44,-756,-756,144,1044,144,144,144,1044,144,144], [-256,-1456,-256,144,44,-256,44,-756,-756,144,1044,144,-756,144,1044,144], [144,-256,-1456,-256,1044,44,-256,44,144,-756,144,1044,144,-756,144,1044], [144,144,-256,-1456,1044,1044,44,-256,144,144,-756,144,144,144,-756,144], [-256,44,1044,1044,-1456,-256,144,144,-256,44,-756,-756,144,1044,144,144], [44,-256,44,1044,-256,-1456,-256,144,44,-256,44,-756,-756,144,1044,144], [-756,44,-256,44,144,-256,-1456,-256,1044,44,-256,44,144,-756,144,1044], [-756,-756,44,-256,144,144,-256,-1456,1044,1044,44,-256,144,144,-756,144], [144,-756,144,144,-256,44,1044,1044,-1456,-256,144,144,-256,44,-756,-756], [1044,144,-756,144,44,-256,44,1044,-256,-1456,-256,144,44,-256,44,-756], [144,1044,144,-756,-756,44,-256,44,144,-256,-1456,-256,1044,44,-256,44], [144,144,1044,144,-756,-756,44,-256,144,144,-256,-1456,1044,1044,44,-256], [144,-756,144,144,144,-756,144,144,-256,44,1044,1044,-1456,-256,144,144], [1044,144,-756,144,1044,144,-756,144,44,-256,44,1044,-256,-1456,-256,144], [144,1044,144,-756,144,1044,144,-756,-756,44,-256,44,144,-256,-1456,-256], [144,144,1044,144,144,144,1044,144,-756,-756,44,-256,144,144,-256,-1456]])
Hessians[(2,1,0,3)] = matrix(QQ,[[2160,40,-576,-576,40,-3958,324,324,-576,324,144,144,-576,324,144,144], [40,1616,-96,-576,3898,-64,-3642,324,-396,-576,-36,144,-396,-576,-36,144], [-576,-96,1072,-232,-396,3530,-168,-2810,144,-36,-576,-396,144,-36,-576,-396], [-576,-576,-232,528,-396,-396,2646,-272,144,144,324,-576,144,144,324,-576], [40,3898,-396,-396,1616,-64,-576,-576,-96,-3642,-36,-36,-576,324,144,144], [-3958,-64,3530,-396,-64,1328,-136,-576,3530,-136,-2878,-36,-396,-576,-36,144], [324,-3642,-168,2646,-576,-136,1040,-208,-36,2746,-176,-2102,144,-36,-576,-396], [324,324,-2810,-272,-576,-576,-208,752,-36,-36,1950,-216,144,144,324,-576], [-576,-396,144,144,-96,3530,-36,-36,1072,-168,-576,-576,-232,-2810,-396,-396], [324,-576,-36,144,-3642,-136,2746,-36,-168,1040,-176,-576,2646,-208,-2102,-396], [144,-36,-576,324,-36,-2878,-176,1950,-576,-176,1008,-184,324,1950,-184,-1598], [144,144,-396,-576,-36,-36,-2102,-216,-576,-576,-184,976,324,324,1458,-160], [-576,-396,144,144,-576,-396,144,144,-232,2646,324,324,528,-272,-576,-576], [324,-576,-36,144,324,-576,-36,144,-2810,-208,1950,324,-272,752,-216,-576], [144,-36,-576,324,144,-36,-576,324,-396,-2102,-184,1458,-576,-216,976,-160], [144,144,-396,-576,144,144,-396,-576,-396,-396,-1598,-160,-576,-576,-160,1200]])
Hessians[(2,1,3,0)] = matrix(QQ,[[384,-76,-144,-144,484,-1800,756,756,576,-324,-144,-144,576,-324,-144,-144], [-76,-128,-204,-144,1798,372,-1942,756,396,576,36,-144,396,576,36,-144], [-144,-204,-640,-332,-1044,1884,260,-1196,-144,36,576,396,-144,36,576,396], [-144,-144,-332,-1152,-1044,-1044,1082,148,-144,-144,-324,576,-144,-144,-324,576], [484,1798,-1044,-1044,32,-148,-144,-144,396,-702,756,756,576,-324,-144,-144], [-1800,372,1884,-1044,-148,-352,-244,-144,664,316,-620,756,396,576,36,-144], [756,-1942,260,1082,-144,-244,-736,-340,-1044,542,236,-82,-144,36,576,396], [756,756,-1196,148,-144,-144,-340,-1120,-1044,-1044,-36,156,-144,-144,-324,576], [576,396,-144,-144,396,664,-1044,-1044,-320,-220,-144,-144,308,24,756,756], [-324,576,36,-144,-702,316,542,-1044,-220,-576,-284,-144,-98,260,258,756], [-144,36,576,-324,756,-620,236,-36,-144,-284,-832,-348,-1044,-356,212,660], [-144,-144,396,576,756,756,-82,156,-144,-144,-348,-1088,-1044,-1044,-782,164], [576,396,-144,-144,576,396,-144,-144,308,-98,-1044,-1044,-672,-292,-144,-144], [-324,576,36,-144,-324,576,36,-144,24,260,-356,-1044,-292,-800,-324,-144], [-144,36,576,-324,-144,36,576,-324,756,258,212,-782,-144,-324,-928,-356], [-144,-144,396,576,-144,-144,396,576,756,756,660,164,-144,-144,-356,-1056]])
Hessians[(2,3,0,1)] = matrix(QQ,[[1280,-40,-432,-432,-40,1541,216,216,-432,216,0,0,-432,216,0,0], [-40,992,-112,-432,-1411,-88,2231,216,0,-432,288,0,0,-432,288,0], [-432,-112,704,-184,0,-2125,-136,3317,576,-72,-432,216,576,-72,-432,216], [-432,-432,-184,416,0,0,-3235,-184,576,576,0,-432,576,576,0,-432], [-40,-1411,0,0,992,-88,-432,-432,-112,2231,288,288,-432,216,0,0], [1541,-88,-2125,0,-88,896,-112,-432,-2125,-112,2069,288,0,-432,288,0], [216,2231,-136,-3235,-432,-112,800,-136,-72,-1963,-112,2231,576,-72,-432,216], [216,216,3317,-184,-432,-432,-136,704,-72,-72,-2125,-112,576,576,0,-432], [-432,0,576,576,-112,-2125,-72,-72,704,-136,-432,-432,-184,3317,216,216], [216,-432,-72,576,2231,-112,-1963,-72,-136,800,-112,-432,-3235,-136,2231,216], [0,288,-432,0,288,2069,-112,-2125,-432,-112,896,-88,0,-2125,-88,1541], [0,0,216,-432,288,288,2231,-112,-432,-432,-88,992,0,0,-1411,-40], [-432,0,576,576,-432,0,576,576,-184,-3235,0,0,416,-184,-432,-432], [216,-432,-72,576,216,-432,-72,576,3317,-136,-2125,0,-184,704,-112,-432], [0,288,-432,0,0,288,-432,0,216,2231,-88,-1411,-432,-112,992,-40], [0,0,216,-432,0,0,216,-432,216,216,1541,-40,-432,-432,-40,1280]])
Hessians[(2,3,1,0)] = matrix(QQ,[[-192,248,432,432,328,-447,-216,-216,432,-216,0,0,432,-216,0,0], [248,-416,192,432,433,264,611,-216,0,432,-288,0,0,432,-288,0], [432,192,-640,136,0,-657,200,2161,-576,72,432,-216,-576,72,432,-216], [432,432,136,-864,0,0,-2239,136,-576,-576,0,432,-576,-576,0,432], [328,433,0,0,224,344,432,432,432,-1629,-288,-288,432,-216,0,0], [-447,264,-657,0,344,-64,272,432,1663,352,-575,-288,0,432,-288,0], [-216,611,200,-2239,432,272,-352,200,72,569,272,611,-576,72,432,-216], [-216,-216,2161,136,432,432,200,-640,72,72,-657,192,-576,-576,0,432], [432,0,-576,-576,432,1663,72,72,640,440,432,432,536,-3039,-216,-216], [-216,432,72,-576,-1629,352,569,72,440,288,352,432,3121,440,-1629,-216], [0,-288,432,0,-288,-575,272,-657,432,352,-64,264,0,1663,344,-447], [0,0,-216,432,-288,-288,611,192,432,432,264,-416,0,0,433,248], [432,0,-576,-576,432,0,-576,-576,536,3121,0,0,1056,536,432,432], [-216,432,72,-576,-216,432,72,-576,-3039,440,1663,0,536,640,432,432], [0,-288,432,0,0,-288,432,0,-216,-1629,344,433,432,432,224,328], [0,0,-216,432,0,0,-216,432,-216,-216,-447,248,432,432,328,-192]])
Hessians[(3,0,1,2)] = matrix(QQ,[[528,-272,-576,-576,-232,2646,324,324,-576,-396,144,144,-576,-396,144,144], [-272,752,-216,-576,-2810,-208,1950,324,324,-576,-36,144,324,-576,-36,144], [-576,-216,976,-160,-396,-2102,-184,1458,144,-36,-576,324,144,-36,-576,324], [-576,-576,-160,1200,-396,-396,-1598,-160,144,144,-396,-576,144,144,-396,-576], [-232,-2810,-396,-396,1072,-168,-576,-576,-96,3530,-36,-36,-576,-396,144,144], [2646,-208,-2102,-396,-168,1040,-176,-576,-3642,-136,2746,-36,324,-576,-36,144], [324,1950,-184,-1598,-576,-176,1008,-184,-36,-2878,-176,1950,144,-36,-576,324], [324,324,1458,-160,-576,-576,-184,976,-36,-36,-2102,-216,144,144,-396,-576], [-576,324,144,144,-96,-3642,-36,-36,1616,-64,-576,-576,40,3898,-396,-396], [-396,-576,-36,144,3530,-136,-2878,-36,-64,1328,-136,-576,-3958,-64,3530,-396], [144,-36,-576,-396,-36,2746,-176,-2102,-576,-136,1040,-208,324,-3642,-168,2646], [144,144,324,-576,-36,-36,1950,-216,-576,-576,-208,752,324,324,-2810,-272], [-576,324,144,144,-576,324,144,144,40,-3958,324,324,2160,40,-576,-576], [-396,-576,-36,144,-396,-576,-36,144,3898,-64,-3642,324,40,1616,-96,-576], [144,-36,-576,-396,144,-36,-576,-396,-396,3530,-168,-2810,-576,-96,1072,-232], [144,144,324,-576,144,144,324,-576,-396,-396,2646,-272,-576,-576,-232,528]])
Hessians[(3,0,2,1)] = matrix(QQ,[[-1056,-356,-144,-144,164,660,756,756,576,396,-144,-144,576,396,-144,-144], [-356,-928,-324,-144,-782,212,258,756,-324,576,36,-144,-324,576,36,-144], [-144,-324,-800,-292,-1044,-356,260,24,-144,36,576,-324,-144,36,576,-324], [-144,-144,-292,-672,-1044,-1044,-98,308,-144,-144,396,576,-144,-144,396,576], [164,-782,-1044,-1044,-1088,-348,-144,-144,156,-82,756,756,576,396,-144,-144], [660,212,-356,-1044,-348,-832,-284,-144,-36,236,-620,756,-324,576,36,-144], [756,258,260,-98,-144,-284,-576,-220,-1044,542,316,-702,-144,36,576,-324], [756,756,24,308,-144,-144,-220,-320,-1044,-1044,664,396,-144,-144,396,576], [576,-324,-144,-144,156,-36,-1044,-1044,-1120,-340,-144,-144,148,-1196,756,756], [396,576,36,-144,-82,236,542,-1044,-340,-736,-244,-144,1082,260,-1942,756], [-144,36,576,396,756,-620,316,664,-144,-244,-352,-148,-1044,1884,372,-1800], [-144,-144,-324,576,756,756,-702,396,-144,-144,-148,32,-1044,-1044,1798,484], [576,-324,-144,-144,576,-324,-144,-144,148,1082,-1044,-1044,-1152,-332,-144,-144], [396,576,36,-144,396,576,36,-144,-1196,260,1884,-1044,-332,-640,-204,-144], [-144,36,576,396,-144,36,576,396,756,-1942,372,1798,-144,-204,-128,-76], [-144,-144,-324,576,-144,-144,-324,576,756,756,-1800,484,-144,-144,-76,384]])
Hessians[(3,1,0,2)] = matrix(QQ,[[384,484,576,576,-76,-1800,-324,-324,-144,756,-144,-144,-144,756,-144,-144], [484,32,396,576,1798,-148,-702,-324,-1044,-144,756,-144,-1044,-144,756,-144], [576,396,-320,308,396,664,-220,24,-144,-1044,-144,756,-144,-1044,-144,756], [576,576,308,-672,396,396,-98,-292,-144,-144,-1044,-144,-144,-144,-1044,-144], [-76,1798,396,396,-128,372,576,576,-204,-1942,36,36,-144,756,-144,-144], [-1800,-148,664,396,372,-352,316,576,1884,-244,-620,36,-1044,-144,756,-144], [-324,-702,-220,-98,576,316,-576,260,36,542,-284,258,-144,-1044,-144,756], [-324,-324,24,-292,576,576,260,-800,36,36,-356,-324,-144,-144,-1044,-144], [-144,-1044,-144,-144,-204,1884,36,36,-640,260,576,576,-332,-1196,396,396], [756,-144,-1044,-144,-1942,-244,542,36,260,-736,236,576,1082,-340,-82,396], [-144,756,-144,-1044,36,-620,-284,-356,576,236,-832,212,-324,-36,-348,660], [-144,-144,756,-144,36,36,258,-324,576,576,212,-928,-324,-324,-782,-356], [-144,-1044,-144,-144,-144,-1044,-144,-144,-332,1082,-324,-324,-1152,148,576,576], [756,-144,-1044,-144,756,-144,-1044,-144,-1196,-340,-36,-324,148,-1120,156,576], [-144,756,-144,-1044,-144,756,-144,-1044,396,-82,-348,-782,576,156,-1088,164], [-144,-144,756,-144,-144,-144,756,-144,396,396,660,-356,576,576,164,-1056]])
Hessians[(3,1,2,0)] = matrix(QQ,[[-80,40,144,144,40,382,-756,-756,144,-756,144,144,144,-756,144,144], [40,-464,-56,144,-162,-24,738,-756,1044,144,-756,144,1044,144,-756,144], [144,-56,-848,-152,1044,-550,-88,350,144,1044,144,-756,144,1044,144,-756], [144,144,-152,-1232,1044,1044,-194,-152,144,144,1044,144,144,144,1044,144], [40,-162,1044,1044,-464,-24,144,144,-56,738,-756,-756,144,-756,144,144], [382,-24,-550,1044,-24,-592,-56,144,-550,-56,1182,-756,1044,144,-756,144], [-756,738,-88,-194,144,-56,-720,-88,1044,-994,-56,738,144,1044,144,-756], [-756,-756,350,-152,144,144,-88,-848,1044,1044,-550,-56,144,144,1044,144], [144,1044,144,144,-56,-550,1044,1044,-848,-88,144,144,-152,350,-756,-756], [-756,144,1044,144,738,-56,-994,1044,-88,-720,-56,144,-194,-88,738,-756], [144,-756,144,1044,-756,1182,-56,-550,144,-56,-592,-24,1044,-550,-24,382], [144,144,-756,144,-756,-756,738,-56,144,144,-24,-464,1044,1044,-162,40], [144,1044,144,144,144,1044,144,144,-152,-194,1044,1044,-1232,-152,144,144], [-756,144,1044,144,-756,144,1044,144,350,-88,-550,1044,-152,-848,-56,144], [144,-756,144,1044,144,-756,144,1044,-756,738,-24,-162,144,-56,-464,40], [144,144,-756,144,144,144,-756,144,-756,-756,382,40,144,144,40,-80]])
Hessians[(3,2,0,1)] = matrix(QQ,[[-192,328,432,432,248,-447,-216,-216,432,-216,0,0,432,-216,0,0], [328,224,432,432,433,344,-1629,-216,0,432,-288,0,0,432,-288,0], [432,432,640,536,0,1663,440,-3039,-576,72,432,-216,-576,72,432,-216], [432,432,536,1056,0,0,3121,536,-576,-576,0,432,-576,-576,0,432], [248,433,0,0,-416,264,432,432,192,611,-288,-288,432,-216,0,0], [-447,344,1663,0,264,-64,352,432,-657,272,-575,-288,0,432,-288,0], [-216,-1629,440,3121,432,352,288,440,72,569,352,-1629,-576,72,432,-216], [-216,-216,-3039,536,432,432,440,640,72,72,1663,432,-576,-576,0,432], [432,0,-576,-576,192,-657,72,72,-640,200,432,432,136,2161,-216,-216], [-216,432,72,-576,611,272,569,72,200,-352,272,432,-2239,200,611,-216], [0,-288,432,0,-288,-575,352,1663,432,272,-64,344,0,-657,264,-447], [0,0,-216,432,-288,-288,-1629,432,432,432,344,224,0,0,433,328], [432,0,-576,-576,432,0,-576,-576,136,-2239,0,0,-864,136,432,432], [-216,432,72,-576,-216,432,72,-576,2161,200,-657,0,136,-640,192,432], [0,-288,432,0,0,-288,432,0,-216,611,264,433,432,192,-416,248], [0,0,-216,432,0,0,-216,432,-216,-216,-447,328,432,432,248,-192]])
Hessians[(3,2,1,0)] = matrix(QQ,[[928,-32,-432,-432,-32,-2435,216,216,-432,216,0,0,-432,216,0,0], [-32,1408,88,-432,2601,48,-3357,216,0,-432,288,0,0,-432,288,0], [-432,88,1888,208,0,3563,128,-4195,576,-72,-432,216,576,-72,-432,216], [-432,-432,208,2368,0,0,4441,208,576,576,0,-432,576,576,0,-432], [-32,2601,0,0,1408,48,-432,-432,88,-3357,288,288,-432,216,0,0], [-2435,48,3563,0,48,1568,88,-432,3563,88,-3507,288,0,-432,288,0], [216,-3357,128,4441,-432,88,1728,128,-72,3713,88,-3357,576,-72,-432,216], [216,216,-4195,208,-432,-432,128,1888,-72,-72,3563,88,576,576,0,-432], [-432,0,576,576,88,3563,-72,-72,1888,128,-432,-432,208,-4195,216,216], [216,-432,-72,576,-3357,88,3713,-72,128,1728,88,-432,4441,128,-3357,216], [0,288,-432,0,288,-3507,88,3563,-432,88,1568,48,0,3563,48,-2435], [0,0,216,-432,288,288,-3357,88,-432,-432,48,1408,0,0,2601,-32], [-432,0,576,576,-432,0,576,576,208,4441,0,0,2368,208,-432,-432], [216,-432,-72,576,216,-432,-72,576,-4195,128,3563,0,208,1888,88,-432], [0,288,-432,0,0,288,-432,0,216,-3357,48,2601,-432,88,1408,-32], [0,0,216,-432,0,0,216,-432,216,216,-2435,-32,-432,-432,-32,928]])
Hessians[(0,1,2)] = (4/4)*Hessians[(0,1,2,3)] + (2/4)*Hessians[(0,1,3,2)] + (2/4)*Hessians[(0,2,1,3)] + (1/4)*Hessians[(0,2,3,1)] + (1/4)*Hessians[(0,3,1,2)] + (0/4)*Hessians[(0,3,2,1)] + (2/4)*Hessians[(1,0,2,3)] + (0/4)*Hessians[(1,0,3,2)] + (1/4)*Hessians[(1,2,0,3)] + (1/4)*Hessians[(1,2,3,0)] + (0/4)*Hessians[(1,3,0,2)] + (0/4)*Hessians[(1,3,2,0)] + (1/4)*Hessians[(2,0,1,3)] + (0/4)*Hessians[(2,0,3,1)] + (0/4)*Hessians[(2,1,0,3)] + (0/4)*Hessians[(2,1,3,0)] + (0/4)*Hessians[(2,3,0,1)] + (0/4)*Hessians[(2,3,1,0)] + (1/4)*Hessians[(3,0,1,2)] + (0/4)*Hessians[(3,0,2,1)] + (0/4)*Hessians[(3,1,0,2)] + (0/4)*Hessians[(3,1,2,0)] + (0/4)*Hessians[(3,2,0,1)] + (0/4)*Hessians[(3,2,1,0)]
Hessians[(0,2,1)] = (0/4)*Hessians[(0,1,2,3)] + (2/4)*Hessians[(0,1,3,2)] + (1/4)*Hessians[(0,2,1,3)] + (2/4)*Hessians[(0,2,3,1)] + (2/4)*Hessians[(0,3,1,2)] + (3/4)*Hessians[(0,3,2,1)] + (0/4)*Hessians[(1,0,2,3)] + (2/4)*Hessians[(1,0,3,2)] + (0/4)*Hessians[(1,2,0,3)] + (0/4)*Hessians[(1,2,3,0)] + (1/4)*Hessians[(1,3,0,2)] + (1/4)*Hessians[(1,3,2,0)] + (0/4)*Hessians[(2,0,1,3)] + (1/4)*Hessians[(2,0,3,1)] + (0/4)*Hessians[(2,1,0,3)] + (0/4)*Hessians[(2,1,3,0)] + (0/4)*Hessians[(2,3,0,1)] + (0/4)*Hessians[(2,3,1,0)] + (0/4)*Hessians[(3,0,1,2)] + (1/4)*Hessians[(3,0,2,1)] + (0/4)*Hessians[(3,1,0,2)] + (0/4)*Hessians[(3,1,2,0)] + (0/4)*Hessians[(3,2,0,1)] + (0/4)*Hessians[(3,2,1,0)]
Hessians[(1,0,2)] = (0/4)*Hessians[(0,1,2,3)] + (0/4)*Hessians[(0,1,3,2)] + (1/4)*Hessians[(0,2,1,3)] + (0/4)*Hessians[(0,2,3,1)] + (0/4)*Hessians[(0,3,1,2)] + (0/4)*Hessians[(0,3,2,1)] + (2/4)*Hessians[(1,0,2,3)] + (2/4)*Hessians[(1,0,3,2)] + (2/4)*Hessians[(1,2,0,3)] + (0/4)*Hessians[(1,2,3,0)] + (1/4)*Hessians[(1,3,0,2)] + (0/4)*Hessians[(1,3,2,0)] + (2/4)*Hessians[(2,0,1,3)] + (1/4)*Hessians[(2,0,3,1)] + (3/4)*Hessians[(2,1,0,3)] + (1/4)*Hessians[(2,1,3,0)] + (0/4)*Hessians[(2,3,0,1)] + (0/4)*Hessians[(2,3,1,0)] + (0/4)*Hessians[(3,0,1,2)] + (0/4)*Hessians[(3,0,2,1)] + (1/4)*Hessians[(3,1,0,2)] + (0/4)*Hessians[(3,1,2,0)] + (0/4)*Hessians[(3,2,0,1)] + (0/4)*Hessians[(3,2,1,0)]
Hessians[(1,2,0)] = (0/4)*Hessians[(0,1,2,3)] + (0/4)*Hessians[(0,1,3,2)] + (0/4)*Hessians[(0,2,1,3)] + (1/4)*Hessians[(0,2,3,1)] + (0/4)*Hessians[(0,3,1,2)] + (0/4)*Hessians[(0,3,2,1)] + (0/4)*Hessians[(1,0,2,3)] + (0/4)*Hessians[(1,0,3,2)] + (1/4)*Hessians[(1,2,0,3)] + (3/4)*Hessians[(1,2,3,0)] + (1/4)*Hessians[(1,3,0,2)] + (2/4)*Hessians[(1,3,2,0)] + (0/4)*Hessians[(2,0,1,3)] + (1/4)*Hessians[(2,0,3,1)] + (0/4)*Hessians[(2,1,0,3)] + (2/4)*Hessians[(2,1,3,0)] + (2/4)*Hessians[(2,3,0,1)] + (2/4)*Hessians[(2,3,1,0)] + (0/4)*Hessians[(3,0,1,2)] + (0/4)*Hessians[(3,0,2,1)] + (0/4)*Hessians[(3,1,0,2)] + (1/4)*Hessians[(3,1,2,0)] + (0/4)*Hessians[(3,2,0,1)] + (0/4)*Hessians[(3,2,1,0)]
Hessians[(2,0,1)] = (0/4)*Hessians[(0,1,2,3)] + (0/4)*Hessians[(0,1,3,2)] + (0/4)*Hessians[(0,2,1,3)] + (0/4)*Hessians[(0,2,3,1)] + (1/4)*Hessians[(0,3,1,2)] + (0/4)*Hessians[(0,3,2,1)] + (0/4)*Hessians[(1,0,2,3)] + (0/4)*Hessians[(1,0,3,2)] + (0/4)*Hessians[(1,2,0,3)] + (0/4)*Hessians[(1,2,3,0)] + (1/4)*Hessians[(1,3,0,2)] + (0/4)*Hessians[(1,3,2,0)] + (1/4)*Hessians[(2,0,1,3)] + (1/4)*Hessians[(2,0,3,1)] + (0/4)*Hessians[(2,1,0,3)] + (0/4)*Hessians[(2,1,3,0)] + (2/4)*Hessians[(2,3,0,1)] + (0/4)*Hessians[(2,3,1,0)] + (3/4)*Hessians[(3,0,1,2)] + (2/4)*Hessians[(3,0,2,1)] + (2/4)*Hessians[(3,1,0,2)] + (1/4)*Hessians[(3,1,2,0)] + (2/4)*Hessians[(3,2,0,1)] + (0/4)*Hessians[(3,2,1,0)]
Hessians[(2,1,0)] = (0/4)*Hessians[(0,1,2,3)] + (0/4)*Hessians[(0,1,3,2)] + (0/4)*Hessians[(0,2,1,3)] + (0/4)*Hessians[(0,2,3,1)] + (0/4)*Hessians[(0,3,1,2)] + (1/4)*Hessians[(0,3,2,1)] + (0/4)*Hessians[(1,0,2,3)] + (0/4)*Hessians[(1,0,3,2)] + (0/4)*Hessians[(1,2,0,3)] + (0/4)*Hessians[(1,2,3,0)] + (0/4)*Hessians[(1,3,0,2)] + (1/4)*Hessians[(1,3,2,0)] + (0/4)*Hessians[(2,0,1,3)] + (0/4)*Hessians[(2,0,3,1)] + (1/4)*Hessians[(2,1,0,3)] + (1/4)*Hessians[(2,1,3,0)] + (0/4)*Hessians[(2,3,0,1)] + (2/4)*Hessians[(2,3,1,0)] + (0/4)*Hessians[(3,0,1,2)] + (1/4)*Hessians[(3,0,2,1)] + (1/4)*Hessians[(3,1,0,2)] + (2/4)*Hessians[(3,1,2,0)] + (2/4)*Hessians[(3,2,0,1)] + (4/4)*Hessians[(3,2,1,0)]
Hessians[(0,1)] = (3/3)*Hessians[(0,1,2)] + (2/3)*Hessians[(0,2,1)] + (2/3)*Hessians[(1,0,2)] + (1/3)*Hessians[(1,2,0)] + (1/3)*Hessians[(2,0,1)] + (0/3)*Hessians[(2,1,0)]
Hessians[(1,0)] = (0/3)*Hessians[(0,1,2)] + (1/3)*Hessians[(0,2,1)] + (1/3)*Hessians[(1,0,2)] + (2/3)*Hessians[(1,2,0)] + (2/3)*Hessians[(2,0,1)] + (3/3)*Hessians[(2,1,0)]
def search5(d):
    d0,d1,d2,d3,d4=d
    n=d0
    constant_covers=[]
    for q0 in Permutations(d0):
        #print(q0)
        for q1 in Permutations(d1):
            if d1<d0 or q1<q0:
                for q2 in Permutations(d2):
                    if d2<d1 or q2<q1:
                        for q3 in Permutations(d3):
                            if d3<d2 or q3<q2:
                                for q4 in Permutations(d4):
                                    if d4<d3 or q4<q3:
                                        rawperms=[q0,q1,q2,q3,q4]
                                        perms=[[x-1 for x in q] for q in rawperms]
                                        mats=[genPermMatrix(p,n) for p in perms]
                                        result=covers(mats)
                                        if result!='does not cover' and 0 not in result[1]:
                                            coeffs=standardize(result[1].list())
                                            this_comb=[(perms[i],coeffs[i]) for i in range(len(perms))]
                                            already_found=False
                                            for c in constant_covers:
                                                if equivCombsOfPerms(this_comb,c):
                                                    already_found=True
                                                    break
                                            if not already_found:
                                                constant_covers+=[this_comb]
                                                print(f"constant cover {this_comb}")
                                                H=sum([coeffs[i]*Hessians[tuple(perms[i])] for i in range(len(perms))])
                                                evals=H.eigenvalues()
                                                print("Low: ",end='')
                                                if min(evals)<0:
                                                    print(f"Hessian eigenvalue {min(evals)}")
                                                else:
                                                    print("ad-hoc needed")
                                                print("High: ",end='')
                                                if max(evals)>0:
                                                    print(f"Hessian eigenvalue {max(evals)}")
                                                else:
                                                    print("ad-hoc needed")
                                                print()
def search4(d):
    d0,d1,d2,d3=d
    n=d0
    constant_covers=[]
    for q0 in Permutations(d0):
        for q1 in Permutations(d1):
            if d1<d0 or q1<q0:
                for q2 in Permutations(d2):
                    if d2<d1 or q2<q1:
                        for q3 in Permutations(d3):
                            if d3<d2 or q3<q2:
                                        rawperms=[q0,q1,q2,q3]
                                        perms=[[x-1 for x in q] for q in rawperms]
                                        mats=[genPermMatrix(p,n) for p in perms]
                                        result=covers(mats)
                                        if result!='does not cover' and 0 not in result[1]:
                                            coeffs=standardize(result[1].list())
                                            this_comb=[(perms[i],coeffs[i]) for i in range(len(perms))]
                                            already_found=False
                                            for c in constant_covers:
                                                if equivCombsOfPerms(this_comb,c):
                                                    already_found=True
                                                    break
                                            if not already_found:
                                                constant_covers+=[this_comb]
                                                print(f"constant cover {this_comb}")
                                                H=sum([coeffs[i]*Hessians[tuple(perms[i])] for i in range(len(perms))])
                                                evals=H.eigenvalues()
                                                print("Low: ",end='')
                                                if min(evals)<0:
                                                    print(f"Hessian eigenvalue {min(evals)}")
                                                else:
                                                    print("ad-hoc needed")
                                                print("High: ",end='')
                                                if max(evals)>0:
                                                    print(f"Hessian eigenvalue {max(evals)}")
                                                else:
                                                    print("ad-hoc needed")
                                                print()
 def fullsearch(d):
    if len(d)==4:
        search4(d)
    if len(d)==5:
        search5(d)
